Q1 Write a program non-recursive and recursive program to calculate Fibonacci numbers and analyze their time and space
complexity.

import java.util.*;
 
public class Pract1 {

    //RECURSION :
    public static int fibonacci(int num){

        if(num < 2)
            return num; //exit condition of recursion

        return fibonacci(num - 1) + fibonacci(num - 2);
    }

    public static void fibo(int n){

        //WITHOUT RECURSION :
        // int last = 1, secondLast = 0, current;
        // for(int i = 0; i < n; i++){
        //     if(i < 2){
        //         current = i;
        //     } else {
        //         current = last + secondLast;
        //         secondLast = last;
        //         last = current;
        //     }
        //     System.out.print(current + " ");

            int a=0;
            int b=1;

            for(int i=0;i<n;i++){

                System.out.print(a+" ");
                int temp=a+b;
                a=b;
                b=temp;
            }
        }

    public static void main(String args[]) {
        int terms;
        Scanner in = new Scanner(System.in);
        System.out.println("Enter number of terms in Fibonacci Series");
        terms = in.nextInt();

         fibo(terms); //RECURSION CALL 
         System.out.println();

         for(int i=0;i<terms;i++){
            System.out.print(fibonacci(i) +" "); //WITHOUT RECURSION CALL
         }
         System.out.println();

    }
}